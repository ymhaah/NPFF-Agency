@use "../global/index" as *;
@use "../util/index" as *;

// @include flex(r, c, c);
// @include flexForPhon(cr,2);
// @include grid(2, 2, fr, 1rem)

/*
    todo: make the hero grid 
    todo: hero main animation styling
    todo: hero elements
        todo: header & button
        todo: the button component with react hot tost library
*/

.container {
    display: grid;
    grid-template-columns: repeat(19, 1fr);
    grid-template-rows: repeat(9, 1fr);
    gap: 16px 16px;
    grid-auto-flow: row;
    grid-template-areas:
        "r1_l r1_l r1_l r1_l r1_l r1_l r1_m r1_m r1_m r1_m r1_m r1_m r1_m r1_r r1_r r1_r r1_r r1_r r1_r"
        "r1_l r1_l r1_l r1_l r1_l r1_l r1_m r1_m r1_m r1_m r1_m r1_m r1_m r1_r r1_r r1_r r1_r r1_r r1_r"
        "r2_l1 r2_l1 r2_l2 r2_l2 r2_l2 r2_l2 r1_m r1_m r1_m r1_m r1_m r1_m r1_m r11_r r11_r r11_r r11_r r11_r r11_r"
        "r2_l1 r2_l1 r2_l2 r2_l2 r2_l2 r2_l2 r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_r r2_r r2_r r2_r"
        "r2_l1 r2_l1 r2_l2 r2_l2 r2_l2 r2_l2 r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_r r2_r r2_r r2_r"
        "r2_l1 r2_l1 r2_l2 r2_l2 r2_l2 r2_l2 r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_m r2_r r2_r r2_r r2_r"
        "r3_l r3_l r3_l r3_l r3_l r3_l r3_m1 r3_m1 r3_m1 r3_m1 r3_m2 r3_m2 r3_m2 r3_m2 r3_m2 r2_r r2_r r2_r r2_r"
        "r3_l r3_l r3_l r3_l r3_l r3_l r3_m1 r3_m1 r3_m1 r3_m1 r3_m2 r3_m2 r3_m2 r3_m2 r3_m2 r3_r r3_r r3_r r3_r"
        "r33_l r33_l r33_l r33_l r33_l r33_l r33_l r33_l r33_l r33_l r3_m2 r3_m2 r3_m2 r3_m2 r3_m2 r3_r r3_r r3_r r3_r";
}

.r1_l {
    grid-area: r1_l;
}

.r2_l2 {
    grid-area: r2_l2;
}

.r2_l1 {
    grid-area: r2_l1;
}

.r1_m {
    grid-area: r1_m;
}

.r1_r {
    grid-area: r1_r;
}

.r2_m {
    grid-area: r2_m;
}

.r2_r {
    grid-area: r2_r;
}

.r3_m2 {
    grid-area: r3_m2;
}

.r3_r {
    grid-area: r3_r;
}

.r3_l {
    grid-area: r3_l;
}

.r3_m1 {
    grid-area: r3_m1;
}

.r11_r {
    grid-area: r11_r;
}

.r33_l {
    grid-area: r33_l;
}

main.hero {
    width: 100vw;
    height: 100vh;
    .container {
        width: 100%;
        height: 100%;
        .Gallery {
            position: absolute;
            top: 0;
            left: 50%;
            transform: translate(-50%, var(--gallery-hight, 0));
            background-color: var(--main-dark-clr);
            .Gallery-image {
                width: 100vw;
                height: 100vh;
                margin: 2.5rem;
                background-color: var(--main-light-clr);
                backface-visibility: hidden;
                overflow: hidden;
                z-index: 1000;
                .image {
                    width: 100%;
                    height: 100%;

                    .blur > div {
                        canvas {
                        }
                    }

                    img {
                        width: 100%;
                        height: 100%;
                        background-position: center;
                    }
                }
            }
            .main-image {
            }
        }
    }
}

.fixed {
    position: fixed !important;
}

.work {
    width: 100vw;
    height: 200vh;
    background-color: red;
}
